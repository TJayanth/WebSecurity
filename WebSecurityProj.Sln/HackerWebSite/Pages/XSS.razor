@page "/XSS"


<h2>Cross-site scripting (XSS) Attack</h2>


<h4>Script injection</h4>
<hr />

<p>
    <img src="/Images/xss.png" width="500px" height="300px" />
</p>

<hr />

<div class="row form-horizontal">
    <div class="col">
        <div>
            <h5>Un-Secured Site</h5>
            Stealing user information without their knowledge
            <a href="http://www.banksite.com:84/Product/ProductListing">View Product Listing</a>
        </div>
    </div>
    <div class="col">
        <div>
            <h5>Secured Site</h5>
            Secured website will not allow XSS attack to be performed
            <a href="http://www.securedbanksite.com:85/Product/ProductListing">View Product Listing</a>
        </div>
    </div>
</div>

<hr />
<div class="row">
    <div class="col">
        <button class="btn btn-sm btn-outline-secondary" @onclick="ShowDevelopersDiv">Prevention</button>
    </div>
</div>

<br />
<div class="@sqlmapDiv row">
    <div class="col">
        <h4>Prevention Techniques</h4>
        <ol>
            <li>Escaping: Escaping the input. By escaping user input, key characters in the data received by a web page will be prevented from being interpreted in any malicious way.</li>
            <li>Validating Input</li>
            <li>Sanitizing: Checking if the data is actually having a potentially dangerous code like html execution</li>

        </ol>
    </div>
</div>

@functions {
    string sqlmapDiv { get; set; }
}

@code {
    private void ShowDevelopersDiv()
    {
        if (sqlmapDiv == "divVisible")
            sqlmapDiv = "divHidden";
        else
            sqlmapDiv = "divVisible";
    }

    protected override async Task OnInitializedAsync()
    {
        sqlmapDiv = "divHidden";

    }
}

<style>
    .divVisible {
        display: block;
    }

    .divHidden {
        display: none;
    }
</style>
